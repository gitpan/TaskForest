################################################################################
#
# $Id$
#
################################################################################
# This is a sample taskforestd configuration file

# Please change all settings to values that make sense for you.

# These are the four required command line arguments to taskforest
log_dir					= "t/logs"
family_dir				= "t/families"
job_dir					= "t/jobs"
calendar_dir			= "t/calendars"
instructions_dir		= "instructions"
chained					= 1
default_time_zone = "America/Chicago"

# lock file   
lock_file       = "t/lock_file"

# document_root
document_root   = "htdocs"

# The host on which the taskforest daemon will run
host            = "127.0.0.1"

# The port on which to listen for connections
port            = 1111

# The number of children that should be available at any time
child_count     = 1

# The number of requests each child process should serve before exiting.
# (To protect from memory leaks, etc)
requests_per_child = 300

# Every time a child dies wait this much time (in seconds) before starting 
# a new child. Do NOT set this value to less than 1, otherwise you may
# encounter CPU thrashing.  Set it to something like 10 seconds if you're
# testing.
respawn_wait    = 1

# my default, log stdout messages with status >= this.
# This only effects stdout
# The sequence of thresholds (smallest to largest is):
# debug, info, warn, error, fatal
log_threshold   = "info"

# The log_file and err_file names should NOT end with '.0' or '.1' 
# because then they will be mistaken for job log files
#log_file        = "taskforestd.%Y%m%d.%H%M%S.stdout"  
#err_file        = "taskforestd.%Y%m%d.%H%M%S.stderr"  
log_file        = "taskforestd.stdout"  
err_file        = "taskforestd.stderr"  
pid_file        = "taskforestd.pid"

# Run as a daemon (detach from terminal)
# You can set this to zero when testing
run_as_daemon   = 1

valid_user = "test:e3MdYgHPUo.QY"
valid_user = "aijaz:honXafDs4LQVc"

